{"version":3,"sources":["components/PersonLink.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/SortLink.tsx","components/CenturyFilter.tsx","components/NameFilter.tsx","components/PeoplePage.tsx","api.ts","App.tsx","index.tsx"],"names":["PersonLink","person","search","useLocation","to","pathname","slug","className","classNames","sex","name","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","SortLink","field","sortField","get","isReversed","sort","order","AVAILABLE_CENTURIES","CenturyFilter","centuries","getAll","map","century","includes","filter","c","length","NameFilter","setSearchParams","query","onChange","event","target","type","placeholder","PeoplePage","useState","people","setPeople","useParams","useEffect","fetch","then","r","json","peopleFromServer","preparedPeople","p","assign","mother","find","m","motherName","father","f","fatherName","visiblePeople","Math","ceil","born","getCentury","lowerQuery","toLocaleLowerCase","join","a","b","localeCompare","reverse","died","getActiveClasses","status","isActive","App","location","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b147f14.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search,\n      }}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\n\ntype SortLinkProps = {\n  field: string;\n};\n\nexport const SortLink: React.FC<SortLinkProps> = ({ field }) => {\n  const [searchParams] = useSearchParams();\n  const sortField = searchParams.get('sort') || '';\n  const isReversed = searchParams.get('order') === 'desc';\n\n  const params = {\n    sort: (field === sortField && isReversed) ? null : field,\n    order: (field === sortField && !isReversed) ? 'desc' : null,\n  };\n\n  return (\n    <SearchLink params={params}>\n      <span className=\"icon\">\n        <i\n          className={classNames('fas', {\n            'fa-sort': sortField !== field,\n            'fa-sort-up': sortField === field && !isReversed,\n            'fa-sort-down': sortField === field && isReversed,\n          })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\n\nconst AVAILABLE_CENTURIES = ['16', '17', '18', '19', '20'];\n\nexport const CenturyFilter = () => {\n  const [searchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries');\n\n  return (\n    <div className=\"level is-flex-grow-1 is-mobile\">\n      <div className=\"level-left\">\n        {AVAILABLE_CENTURIES.map(century => (\n          <SearchLink\n            key={century}\n            className={classNames('button', 'mr-1', {\n              'is-info': centuries.includes(century),\n            })}\n            params={{\n              centuries: centuries.includes(century)\n                ? centuries.filter(c => c !== century)\n                : [...centuries, century],\n            }}\n          >\n            {century}\n          </SearchLink>\n        ))}\n      </div>\n\n      <div className=\"level-right ml-4\">\n        <SearchLink\n          params={{ centuries: null }}\n          className={classNames('button', 'is-success', {\n            'is-outlined': centuries.length > 0,\n          })}\n        >\n          All\n        </SearchLink>\n      </div>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../utils/searchHelper';\n\nexport const NameFilter = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  return (\n    <p className=\"control has-icons-left\">\n      <input\n        value={query}\n        onChange={event => setSearchParams(\n          getSearchWith(searchParams, {\n            query: event.target.value || null,\n          }),\n        )}\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Search\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-search\" aria-hidden=\"true\" />\n      </span>\n    </p>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\nimport { SortLink } from './SortLink';\nimport { SearchLink } from './SearchLink';\nimport { CenturyFilter } from './CenturyFilter';\nimport { NameFilter } from './NameFilter';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [searchParams] = useSearchParams();\n\n  const sex = searchParams.get('sex');\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries');\n  const sortField = searchParams.get('sort');\n  const isReversed = searchParams.get('order') === 'desc';\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => {\n        const preparedPeople = peopleFromServer.map(p => ({ ...p }));\n\n        preparedPeople.forEach(person => {\n          Object.assign(person, {\n            mother: preparedPeople.find(m => m.name === person.motherName)\n              || null,\n            father: preparedPeople.find(f => f.name === person.fatherName)\n              || null,\n          });\n        });\n\n        setPeople(preparedPeople);\n      });\n  }, []);\n\n  let visiblePeople = [...people];\n\n  if (sex) {\n    visiblePeople = visiblePeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length > 0) {\n    const getCentury = (person: Person) => {\n      return Math.ceil(person.born / 100);\n    };\n\n    visiblePeople = visiblePeople.filter(\n      person => centuries.includes(getCentury(person).toString()),\n    );\n  }\n\n  if (query) {\n    const lowerQuery = query.toLocaleLowerCase();\n\n    visiblePeople = visiblePeople.filter(({ name, motherName, fatherName }) => {\n      return [name, motherName || '', fatherName || '']\n        .join('\\n')\n        .toLocaleLowerCase()\n        .includes(lowerQuery);\n    });\n  }\n\n  if (sortField) {\n    visiblePeople.sort((a, b) => {\n      switch (sortField) {\n        case 'name':\n        case 'sex':\n          return a[sortField].localeCompare(b[sortField]);\n\n        case 'born':\n        case 'died':\n          return a[sortField] - b[sortField];\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visiblePeople.reverse();\n    }\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People page</h1>\n      {visiblePeople.length}\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-4-desktop\">\n            <nav className=\"panel\">\n              <p className=\"panel-heading\">\n                Filters\n              </p>\n\n              <p className=\"panel-tabs\">\n                <SearchLink\n                  params={{ sex: null }}\n                  className={classNames({ 'is-active': !sex })}\n                >\n                  All\n                </SearchLink>\n\n                <SearchLink\n                  params={{ sex: 'm' }}\n                  className={classNames({ 'is-active': sex === 'm' })}\n                >\n                  Male\n                </SearchLink>\n\n                <SearchLink\n                  params={{ sex: 'f' }}\n                  className={classNames({ 'is-active': sex === 'f' })}\n                >\n                  Female\n                </SearchLink>\n              </p>\n\n              <div className=\"panel-block\">\n                <NameFilter />\n              </div>\n\n              <div className=\"panel-block\">\n                <CenturyFilter />\n              </div>\n\n              <div className=\"panel-block\">\n                <SearchLink\n                  className=\"button is-link is-outlined is-fullwidth\"\n                  params={{ sex: null, query: null, centuries: null }}\n                >\n                  Reset all filters\n                </SearchLink>\n              </div>\n            </nav>\n          </div>\n\n          <div className=\"column\">\n            <table\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Name\n                      <SortLink field=\"name\" />\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Sex\n                      <SortLink field=\"sex\" />\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Born\n                      <SortLink field=\"born\" />\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Died\n                      <SortLink field=\"died\" />\n                    </span>\n                  </th>\n\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {visiblePeople.map(person => (\n                  <tr\n                    key={person.slug}\n                    className={classNames({\n                      'has-background-warning': person.slug === slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother ? (\n                        <PersonLink person={person.mother} />\n                      ) : person.motherName}\n                    </td>\n                    <td>\n                      {person.father ? (\n                        <PersonLink person={person.father} />\n                      ) : person.fatherName}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\nconst url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(url)\n    .then(r => r.json());\n}\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport {\n  Navigate, NavLink, Route, Routes, useLocation,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PeoplePage } from './components/PeoplePage';\n\ntype Status = { isActive: boolean };\n\nconst getActiveClasses = (status: Status) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': status.isActive },\n);\n\nexport const App = () => {\n  const location = useLocation();\n\n  return (\n    <>\n      <nav\n        className=\"navbar is-fixed-top has-background-light\"\n        data-cy=\"nav\"\n      >\n        <div className=\"navbar-menu container\">\n          <div className=\"navbar-start\">\n            <NavLink to=\"/\" className={getActiveClasses}>\n              Home\n            </NavLink>\n\n            <NavLink\n              to={{\n                pathname: 'people',\n                search: location.search,\n              }}\n              className={getActiveClasses}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}